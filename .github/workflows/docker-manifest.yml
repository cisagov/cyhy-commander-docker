---
name: "Create manifests"

# This reusable workflow creates Docker manifests.  It is useful for combining
# multiple images into a single multi-platform manifest.  The resulting manifest
# will be pushed to the Docker Hub and GitHub Container Registry.

on:
  workflow_call:
    inputs:
      # Required inputs
      image_tags:
        description: "The tags to include in the manifest"
        required: true
        type: string
      platforms:
        description: "The platform(s) to suffix to each image tag (CSV)"
        required: true
        type: string
    secrets:
      docker_password:
        description: "The password for the Docker hub account"
        required: true
      docker_username:
        description: "The username for the Docker hub account"
        required: true

jobs:
  manifest:
    name: "Create and push multi-platform manifests"
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@2e205a28d0e1da00c5f53b161f4067b052c61f34
        with:
          # TODO: change to 'egress-policy: block' after couple of runs
          egress-policy: audit

      - name: Check Docker credentials
        run: |
          return_code=0
          if [ -z "${{ secrets.docker_username }}" ]; then
            echo "::warning::Set the docker_username secret."
            return_code=1
          fi
          if [ -z "${{ secrets.docker_password }}" ]; then
            echo "::warning::Set the docker_password secret."
            return_code=1
          fi
          exit $return_code

      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8

      - name: Login to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_password }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and publish manifests
        run: |
          image_tags="${{ inputs.image_tags }}"
          # loop through each image tag
          for image_tag in ${image_tags}; do
            echo "::group::Creating manifest for ${image_tag}"
            # loop through each platform
            for platform in $(echo ${{ inputs.platforms }} | tr "," " "); do
              # replace illegal characters in platform name
              clean_suffix=$(echo "${platform}" | sed -e 's/[^a-zA-Z0-9._-]/_/g')
              # create the manifest by amending each platform image tag
              echo "Amending ${image_tag}-${clean_suffix} to ${image_tag}"
              docker manifest create --amend "${image_tag}" "${image_tag}-${clean_suffix}"
            done
            # push the completed multi-platform manifest
            echo "Pushing manifest ${image_tag}"
            docker manifest push "${image_tag}"
            echo "::endgroup::"
          done

        # TODO: add a step to remove the platform-specific images from registry
